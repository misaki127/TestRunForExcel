# Generated by Django 3.0.1 on 2021-01-25 06:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('introduce', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': '分类表',
                'verbose_name_plural': '分类表',
            },
        ),
        migrations.CreateModel(
            name='GlobalVariable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': '全局变量表',
                'verbose_name_plural': '全局变量表',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('createTime', models.DateField(auto_now_add=True)),
                ('runTime', models.FloatField(default=0.0, verbose_name='执行时间')),
                ('successNum', models.IntegerField(default=0, verbose_name='成功用例数')),
                ('failNum', models.IntegerField(default=0, verbose_name='失败用例数')),
                ('errorNum', models.IntegerField(default=0, verbose_name='错误用例数')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '测试报告',
                'verbose_name_plural': '测试报告',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('type', models.IntegerField(choices=[(1, '测试用例'), (2, 'token')])),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
            },
        ),
        migrations.CreateModel(
            name='TestCasePath',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('filePath', models.FilePathField(path='/usr/testcase', recursive=True)),
                ('type', models.IntegerField(choices=[(0, '测试用例文件'), (1, '码文件')])),
                ('createTime', models.DateField(auto_now_add=True)),
                ('updateTime', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': '导入文件',
                'verbose_name_plural': '导入文件',
            },
        ),
        migrations.CreateModel(
            name='TestCaseSetp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('url', models.CharField(max_length=50)),
                ('method', models.IntegerField(choices=[(0, 'GET'), (1, 'POST'), (2, 'PUT'), (3, 'DELETE'), (4, 'HEAD'), (5, 'OPTIONS'), (6, 'TEACE'), (7, 'CONNECT')])),
                ('dataType', models.IntegerField(choices=[(0, 'params'), (1, 'data'), (2, 'json'), (3, 'files')])),
                ('data', models.CharField(blank=True, max_length=500)),
                ('headers', models.CharField(blank=True, max_length=200)),
                ('findVariable', models.CharField(blank=True, max_length=30)),
                ('nameVariable', models.CharField(blank=True, max_length=30)),
                ('expectResult', models.CharField(blank=True, max_length=200)),
                ('waitTime', models.CharField(blank=True, max_length=20)),
                ('createTime', models.DateField(auto_now_add=True)),
                ('updateTime', models.DateField(auto_now=True)),
                ('TestCaseId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='testcase', to='UserDao.TestCase')),
                ('categoryId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='UserDao.Category')),
                ('token', models.ForeignKey(limit_choices_to={'type': 2}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='token', to='UserDao.TestCase')),
            ],
            options={
                'verbose_name': '测试用例步骤',
                'verbose_name_plural': '测试用例步骤',
            },
        ),
        migrations.CreateModel(
            name='TestCaseResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('request', models.CharField(max_length=200)),
                ('response', models.CharField(max_length=500)),
                ('result', models.IntegerField(choices=[(0, 'fail'), (1, 'success'), (2, 'error')])),
                ('runTime', models.FloatField(default=0.0, verbose_name='执行时间')),
                ('createTime', models.DateField(auto_now_add=True)),
                ('categoryId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='UserDao.Category')),
                ('globalVariableId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='UserDao.GlobalVariable')),
                ('reportId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='UserDao.Report')),
            ],
            options={
                'verbose_name': '测试结果表',
                'verbose_name_plural': '测试结果表',
            },
        ),
        migrations.CreateModel(
            name='GlobalVariable_ext',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=50)),
                ('value', models.CharField(blank=True, max_length=500)),
                ('globalVariableId', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='UserDao.GlobalVariable')),
            ],
            options={
                'verbose_name': '全局变量表',
                'verbose_name_plural': '全局变量表',
            },
        ),
    ]
